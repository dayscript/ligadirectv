<?php
/**
 * Declared variable
 * @var ak
 * @var actual
 * @var liga
 * @var baseSp
 */
$ak     = variable_get('ak');//'73fee4973791892d5cd9fa0f8411da51';
$actual = variable_get('actual'); //'5';
$liga   = variable_get('liga');//'1312';
$baseSp   = 'https://api.wh.sportingpulseinternational.com';
define("ak", $ak);
define("actual",$actual);  // liga
define("liga",$liga);  // conmetitions
define("baseSp", $baseSp);
$query= baseSp . '/v1/basketball/competitions/' . liga . '/standings?latest=1&format=json&limit=50000&ak='. ak .'';
/**
 * Implementation of hook_menu().
 */
function ligadtv_menu(){
  $menu = array();
  $menu['admin/config/ligadtv'] = array(
    'title'            => t('Liga Directv'),
    'description'      => t('Form config video home'),
    'page callback'    => '_ligadtv_config',
    'access arguments' => array('access content'),
    'file'             => 'ligadtv.pages.inc',
    'type'             => MENU_NORMAL_ITEM,
  );
  $menu['admin/config/ligadtv/video-home'] = array(
    'title'            => t('Video Home'),
    'description'      => t('Form config video home'),
    'page callback'    => '_video_home_config',
    'access arguments' => array('access content'),
    'file'             => 'ligadtv.pages.inc',
    'type'             => MENU_NORMAL_ITEM,
  );

  $menu['matchs']= array(
    'title'            => t('Matchs'),
    'description'      => t('Matchs'),
    'page callback'    => '_matchs',
    'access arguments' => array('access content'),
    'file'             => 'ligadtv.pages.inc',
    'type'             => MENU_CALLBACK,
  );
  $menu['statistics']= array(
    'title'            => t('statistics'),
    'description'      => t('statistics'),
    'page callback'    => '_statistics',
    'access arguments' => array('access content'),
    'file'             => 'ligadtv.pages.inc',
    'type'             => MENU_CALLBACK,
  );
  $menu['statistics/%/%']= array(
    'title'            => t('Statistics Table'),
    'description'      => t('Statistics Table'),
    'page callback'    => '_statistics_table',
    'page arguments'   => array(1, 2),
    'access arguments' => array('access content'),
    'file'             => 'ligadtv.pages.inc',
    'type'             => MENU_CALLBACK,
  );
  $menu['player/%']= array(
    'title'            => t('Team detail'),
    'description'      => t('Teams detail'),
    'page arguments'   => array(1, 2),
    'page callback'    => '_detail_player',
    'access arguments' => array('access content'),
    'file'             => 'ligadtv.pages.inc',
    'type'             => MENU_CALLBACK,
  );
  $menu['positions']= array(
    'title'            => t('Positions'),
    'description'      => t('Positions'),
    'page callback'    => '_positions',
    'access arguments' => array('access content'),
    'file'             => 'ligadtv.pages.inc',
    'type'             => MENU_CALLBACK,
  );
  return $menu;
}


/**
 * Implementation of hook_block_info().
**/
function ligadtv_block_info() {
  $blocks = array();
  $blocks['slidorion'] = array(
    'info'  => t('slidorion home'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    );
  $blocks['table_positions'] = array(
    'info'  => t('Table positions'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['next_macth'] = array(
    'info'  => t('Next macth'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['latest_results'] = array(
    'info'  => t('Latest result'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['fb_widget'] = array(
    'info'  => t('Facebook widget'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['tw_widget'] = array(
    'info'  => t('Twitter widget'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['video_home'] = array(
    'info'  => t('Video Home'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['points_media'] = array(
    'info'  => t('Points media'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['half_rebounds'] = array(
    'info'  => t('Half rebounds'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['media_assistance'] = array(
    'info'  => t('MEDIA ASSISTANCE'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['sponsors_home'] = array(
    'info'  => t('Sponsors Home'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['dpb']  = array(
    'info'  => t('DPB'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['laliga']  = array(
    'info'  => t('LA LIGA'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['topheader']  = array(
    'info'  => t('TOP HEADER'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['payroll'] = array(
    'info'  => t('PAYROLL'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['news_team'] = array(
    'info'  => t('NEWS TEAM'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['calendar_team'] = array(
    'info'  => t('CALENDAR TEAM'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}
/**
 * Implementation of hook_block_view().
 */
function ligadtv_block_view($delta = '') {
    $block = array();
    switch ($delta) {
      case 'slidorion':
        $block['title'] = '<none>';
        $items    = _get_content_custom('article', 6);
        //drupal_add_library('ligadtv', 'slidorion-master');
        drupal_add_js(drupal_get_path('module', 'ligadtv') . '/libraries/slidorion-master/js/jquery.easing.js' , 'file');
        drupal_add_js(drupal_get_path('module', 'ligadtv') . '/libraries/slidorion-master/dist/jquery.slidorion.min.js' , 'file');
        drupal_add_js(drupal_get_path('module', 'ligadtv') . '/js/ligadtv.js', 'file');
        drupal_add_css(drupal_get_path('module', 'ligadtv') . '/libraries/slidorion-master/css/slidorion.css', 'file');
        $block['content'] =array(
                  '#theme' => 'slidorion',
                  '#items' => array($items),
                  );
      break;
      case 'table_positions':
        $block['title'] = '<none>';
        $maxRound = 0;
        $data    = getStanding();
        foreach ($data as $key => $value) {
                    if ($value['roundNumber'] > $maxRound) {
                        $maxRound = $value['roundNumber'];
                    }
                }
           $block['content'] =array(
                  '#theme' => 'table_positions',
                  '#items' => array($data, $maxRound),
                  );
      break;
      case 'next_macth':
        $data = getCal();
        $block['content'] =array(
                  '#theme' => 'next_macth',
                  '#items' => array($data),
                  );
      break;
      case 'latest_results':
        $data = getRes();
        $block['content'] =array(
                  '#theme' => 'latest_result',
                  '#items' => array($data),
                  );
      break;
      case 'fb_widget':
        $block['content'] = array(
                  '#theme' => 'fb',
                  '#items' => array(),
          );
      break;
      case 'tw_widget':
        $block['content'] = array(
                  '#theme' => 'twitter',
                  '#items' => array(),
          );
      break;
      case 'video_home':
        $block['content'] = array(
                  '#theme' => 'video_home',
                  '#items' => array(),
          );
      break;
      case 'points_media':
        $points = getLeaderPoints();
        $items = drawLeader($points,$players,$teams,'sPointsAverage','MP');
        $block['content'] = array(
                          '#theme' => 'points_media',
                          '#items' => $items,
                );
      break;
      case 'half_rebounds':
        $points= getLeaderPointsRebotes();
        $items =drawLeader($points,$players,$teams,'sReboundsTotalAverage','REBM');
        $block['content'] = array(
                          '#theme' => 'half_rebounds',
                          '#items' => $items,
                );
      break;
      case 'media_assistance':
        $points= getLeaderMediaAsistencias2();
        $items =drawLeader($points,$players,$teams,'sAssistsAverage','MAS');
        $block['content'] = array(
                          '#theme' => 'media_assistance',
                          '#items' => $items,
                );
      break;
      case 'sponsors_home':
        $block['content'] = array(
                          '#theme' => 'sponsors_home',
                          '#items' => array(),
                );
      break;
      case 'dpb':
        $block['content']     = array(
                          '#theme'  => 'dpb',
                          '#items'  => array(),
        );
      break;
      case 'laliga':
        $block['content']     = array(
                          '#theme'  => 'laliga',
                          '#items'  => array(),
        );
      break;
      case 'topheader':
        $games = getRes();
        $block['content']     = array(
                          '#theme'  => 'topheader',
                          '#items'  => $games,
        );
      break;
      case 'payroll':
        $nid = arg(1);
        $node = node_load($nid);
        $payroll = team_payroll($node->field_external_id['und'][0]['value']);
        $block['content']     = array(
                          '#theme'  => 'payroll',
                          '#items'  => $payroll['response']['data'],
        );
      break;
      case 'news_team':
        $nid = arg(1);
        $new = _get_news($nid);
        $block['content']     = array(
                          '#theme'  => 'news_team',
                          '#items'  => $new,
        );
      break;
      case 'calendar_team':
        $nid = arg(1);
        $node = node_load($nid);
        $calendar = getCalComplete();
        $block['content']     = array(
                          '#theme'  => 'calendar_team',
                          '#items'  => array('calendar'=>  $calendar , 'node'=>$node),
        );
      break;
    }
  return $block;
}

/**
 * Implementation of hook_theme().
*/
function ligadtv_theme(){
  return array(
  'slidorion' => array(
            'template' => 'theme/slidorion',
            'variables' => array(
                'items' => array(),
          )
        ),
  'table_positions' => array(
            'template' => 'theme/table_positions',
            'variables' => array(
                'items' => array(),
          )
        ),
  'next_macth' => array(
            'template' => 'theme/next_macth',
            'variables' => array(
                'items' => array(),
          )
        ),
  'latest_result' => array(
            'template' => 'theme/latest_result',
            'variables' => array(
                'items' => array(),
          )
        ),
  'fb'            => array(
            'template'  => 'theme/fb',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'twitter'       => array(
            'template'  => 'theme/twitter',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'home_form'     => array(
            'template'  => 'theme/home_form',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'ligadtv_config'     => array(
            'template'  => 'theme/ligadtv_config',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'video_home'     => array(
            'template'  => 'theme/video_home',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'points_media'     => array(
            'template'  => 'theme/points_media',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'half_rebounds'     => array(
            'template'  => 'theme/half_rebounds',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'media_assistance'     => array(
            'template'  => 'theme/media_assistance',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'sponsors_home'     => array(
            'template'  => 'theme/sponsors_home',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'dpb'               => array(
            'template'  => 'theme/dpb',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'laliga'             =>array(
            'template'  => 'theme/laliga',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'matchs'             => array(
            'template'  => 'theme/matchs',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'statistics'         => array(
            'template'  => 'theme/statistics',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'statisticsTable'    => array(
            'template'  => 'theme/statisticsTable',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'teams'             => array(
            'template'  => 'theme/teams',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'detail_teams'      => array(
            'template'  => 'theme/detail_teams',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'topheader'=> array(
            'template'  => 'theme/topheader',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'positions'=> array(
            'template'  => 'theme/positions',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'payroll' => array(
            'template'  => 'theme/payroll',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'news_team'=> array(
            'template'  => 'theme/news_team',
            'variables' => array(
                'items' => array(),
              ),
        ),
  'calendar_team'=> array(
            'template'  => 'theme/calendar_team',
            'variables' => array(
                'items' => array(),
              ),
        ),
    );
}

function ligadtv_cron(){
   // Default to an hourly interval. Of course, cron has to be running at least
  // hourly for this to work.
  $interval = variable_get('cron_ligadtv_interval', 60 * 60);
  // We usually don't want to act every time cron runs (which could be every
  // minute) so keep a time for the next run in a variable.
  if (time() >= variable_get('cron_ligadtv_next_execution', 0)) {
    // This is a silly example of a cron job.
    // It just makes it obvious that the job has run without
    // making any changes to your database.

    $teams = _get_teams();
    if (!empty($teams)) {
      $data = $teams['response']['data'];
      foreach ($data as $key => $value) {
        global $user;
        if(team_exist((int)$value['teamId'])== TRUE){
          drupal_set_message(t('Exist node ' . $value['teamId']));
        }else{
          $node = new stdClass();
          $node->title = $value['teamName'];
          $node->type = "team";
          node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
          $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
          $node->uid = $user->uid;
          $node->status = 1; //(1 or 0): published or not
          $node->promote = 0; //(1 or 0): promoted to front page
          $node->comment = 1; // 0 = comments disabled, 1 = read only, 2 = read/write

          // Image
          $image  = file_get_contents($value['images']['logo']['T1']['url']);
          $file = file_save_data($image, 'public://' . $value['teamName'] . 'druplicon.png',FILE_EXISTS_REPLACE);
          $node->field_image[LANGUAGE_NONE]['0']['fid'] = $file->fid;

          // Entity reference field
          // Let's add some CCK/Fields API field.
          $node->field_external_id[$node->language][0]['value'] = (int)$value['teamId'];
          // If your custom field has a format, don't forget to define it here
          $node->field_external_id‎[$node->language][0]['format'] = 'plain_text';
          // And etc. you can add as much fields here as your content type has. The sky is the limit... and the server specs, of course ;)

          // 'node' is default,
          // Other possible values are "user" and  "taxonomy_term"

          $node = node_submit($node); // Prepare node for saving
          node_save($node);
        }
      }
    }

    watchdog('cron_ligadtv', 'cron_ligadtv ran');
    if (!empty($GLOBALS['cron_ligadtv_show_status_message'])) {
      drupal_set_message(t('cron_ligadtv executed at %time', array('%time' => date_iso8601(time(0)))));
    }
    variable_set('cron_ligadtv_next_execution', time() + $interval);
  }
}

/**
 * Functions custom by @edwindayscript
 */

/**
 * [_get_content_custom description]
 * @param  [type] $type     [description]
 * @param  [type] $quantity [description]
 * @return [type]           [description]
 */

function _get_content_custom($type, $quantity){
  $arraydatos = array();
  $query = db_select('node', 'n');
  $query->join('field_data_field_image', 'img', 'n.nid = img.entity_id');
  $query->join('field_data_body', 'b', 'n.nid = b.entity_id');
  $query->fields('n', array('title', 'nid'))
         ->fields('b', array('body_value'))
         ->fields('img', array('field_image_fid', 'field_image_alt', 'field_image_title'))
         ->condition('n.type', $type)
         ->range(0, $quantity)
         ->orderBy('n.created', 'DESC');
  $result = $query->execute();
  while ($row = $result->fetchAssoc()) {
    $arraydatos[] = array(
          "title" => $row["title"],
          "nid"   => drupal_get_path_alias('node/' . $row["nid"]),
          "body"  => substr($row["body_value"], 0 , 184),
          "fid"   =>  theme('image_style', array('style_name' => 'slidorion_home', 'path' => file_load($row["field_image_fid"])->uri, 'getsize' => FALSE, 'attributes' => array())),
          "fid_alt"=> $row["field_image_alt"],
          "fid_title"=> $row["field_image_title"],
        );
  }
  return $arraydatos;
}
/**
 * Functions obtain INFO TEAMS
 * @return [JSON]
 */
function _get_teams(){
  $uri  = baseSp . '/v1/basketball/competitions/' . liga . '/standings?latest=1&format=json&limit=500&ak=' . ak;
  $json = file_get_contents($uri);
  $data = json_decode($json, TRUE);
  return $data;
}
/**
 * Function obtain detail team
 * @param  [type] $name [description]
 * @param  [type] $id   [description]
 * @return [type]       [description]
 */
function _get_detail_teams($id){
  $uri  = baseSp . '/v1/basketball/clubs/' . $id . '?ak=' . ak;
  print_r($uri);
  die();
  $json = file_get_contents($uri);
  $data = json_decode($json, TRUE);
  return $data;
}
/**
 * [_list_matchs description]
 * @return [type] [description]
 */
function _list_matchs(){
  $uri  = baseSp . '/v1/basketball/competitions/' . liga . '/matches?format=json&limit=50000&ak=' . ak;
  $json = file_get_contents($uri);
  $data = json_decode($json, TRUE);
  return $data;
}

function _get_rounds(){
  $uri  = baseSp . '/v1/basketball/competitions/' . liga . '/rounds?format=json&limit=24&ak=' . ak;
  $json = file_get_contents($uri);
  $data = json_decode($json, TRUE);
  return $data;
}
####################################################################################################################### Back ##################################################################################################################

/**
 * [getStandingData description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getStandingData(){
  $name= 'standing.json';
  $idQuery  =1;
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/standings?latest=1&format=json&limit=50000&ak=' . ak . '';
  // if is old update
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'. $name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . "/data/" . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getStanding description]
 * @param  [type] $sql [description]
 * @return [type]      [description]
 */
function getStanding(){
  $data =  getStandingData();
  $data=$data['response']['data'];
  $dataTemp=$data;
  $size=count($data);
  /**
   * [$i description]
   * @var integer
   */
  for ($i=0; $i < $size; $i++) {
    $mayor['standingPoints']=-999;
    $pos=-1;
    for ($i2=0; $i2 < count($dataTemp); $i2++) {
      if($dataTemp[$i2]['standingPoints']>$mayor['standingPoints']){
        $mayor=$dataTemp[$i2];
        $pos=$i2;
      }
    }
    $data[$i]=$mayor;
    // print($dataTemp);
    unset($dataTemp[$pos]);
    $dataTemp = array_values($dataTemp);
  }
  return $data;
}
/**
 * [getCal description]
 * @return [type] [description]
 */
function getCal(){
  $data    = getCalData();
  $data    = $data['response']['data'];
  $dataTemp= $data;
  $size    = count($data);
  foreach ($data as $key => $value) {
    $dateEnd = explode(' ',$value['matchTime']);
    $dateEnd = strtotime($dateEnd[0]);
    $dateStart= strtotime(date('Y-m-d'));
    if($dateEnd > $dateStart){
      $venue[] = $value['venue']['venueName'];
      $teams[] = array('team-1'=>array('name'=> $value['competitors'][0]['teamName'], 'logo'=>$value['competitors'][0]['logo']['M1']['url']),
        'team-2'=>array('name'=> $value['competitors'][1]['teamName'], 'logo'=>$value['competitors'][1]['logo']['M1']['url']));
    }
  }
  $data = array('venue'=> $venue, 'teams'=>$teams);
  return $data;
}
/**
 * [getCalComplete description]
 * @return [type] [description]
 */
function getCalComplete(){
  $data    = getCalData();
  $data    = $data['response']['data'];
  return $data;
}

/**
 * [getCalData description]
 * @return [type] [description]
 */
function getCalData(){
  $name     = 'cal.json';
  $idQuery  = 2;
  $query    = baseSp . '/v1/basketball/competitions/' . liga . '/matches?format=json&limit=50000&ak=' . ak . '';
  $json     = file_get_contents($query);
  $data     = json_decode($json, TRUE);
  $fp       = fopen(drupal_get_path('module', 'ligadtv') . '/data/'. $name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file     = drupal_get_path('module', 'ligadtv') . '/data/' . $name;

  return json_decode(file_get_contents($file), true);
}
/**
 * [getRes description]
 * @param  [type] $sql [description]
 * @return [type]      [description]
 */
function getRes(){
  $data = getCalData();
  $data=$data['response']['data'];
  $dataTemp=$data;
  $size=count($data);
  for ($i=0; $i < $size; $i++) {
    $menor['matchNumber']=-1;
    $pos=-1;
    for ($i2=0; $i2 < count($dataTemp); $i2++) {
      if($dataTemp[$i2]['matchNumber']>$menor['matchNumber']){
        $menor=$dataTemp[$i2];
        $pos=$i2;
      }
    }
    $data[$i]=$menor;
    unset($dataTemp[$pos]);
    $dataTemp = array_values($dataTemp);
  }
  return $data;
}
/**
 * [getLeaderPoints description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getLeaderPoints(){
  $name= 'sPointsAverage.json';
  $sLeaQuery = 'leaders/sPointsAverage';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode( $json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file=drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [drawLeader description]
 * @param  [type] $data     [description]
 * @param  [type] $players  [description]
 * @param  [type] $teams    [description]
 * @param  string $info     [description]
 * @param  string $nameInfo [description]
 * @return [type]           [description]
 */
function drawLeader($data , $players, $teams, $info='sPoints', $nameInfo='MP'){
$data= $data['response'];
$stFinal='';
$cont = 0;
foreach ($data['data'] as $key => $value) {
    if($cont==6)break;
    $cont++;
    $person   = $players[$value['personId']];
    $name     = $value['firstName'].' '.$value['familyName'];
    $teamName = $value['teamName'];
    $points   = $value[$info];
    $image    = '';
    $team     = $teams[$person['primaryClubId']];
    $clubName = $team['clubName'];
    $clubName = substr($clubName, 0, 3);
    $name = substr($name, 0, 24);
    $escudo ='';
    if(isset($team['images']['logo']['T1']['url']))
      $escudo = $team['images']['logo']['T1']['url'];

    if(isset($value['images']['photo']['T1']))
        $image = $value['images']['photo']['T1']['url'];

    if($key==0){
        $header= <<<EOF
            <div class="dataPlayer">
                <div class="leaderImg">
                    <img src="{$image}">
                    <div class="titleLidder">Leader</div>
                </div>
                <div class="info">
                    <div class="inInfo">
                      <h4>{$name}</h4>
                      <h5>{$teamName}</h5>
                    </div>
                    <div class="cc1Info">
                        <div class="cc2Info">
                            {$points} {$nameInfo}
                        </div>
                        <img src="{$escudo}">
                    </div>
                </div>
            </div>
EOF;
        $returnData['header'] = $header;
    }
    else{
        $stFinal.='<tr>
                        <td >'.($key+1).'</td>
                        <td>'.$clubName.'</td>
                        <td>'.$name.'</td>
                        <td>'.$points.'</td>
                    </tr>';
    }
}
  $table = <<<EOF
<div class="tableLeader">
            <table>
                <thead>
                    <tr>
                        <td width="20px">#</td>
                        <td width="50px">EQU</td>
                        <td width="185px" style="text-align: left;">NOMBRE</td>
                        <td width="45px">{$nameInfo}</td>
                    </tr>
                </thead>
                <tbody>
                {$stFinal}
                </tbody>
            </table>
            <a href="/statistics/{$info}/{$nameInfo}" class="verTodos">VER LISTA COMPLETA >></a>
        </div>
EOF;
  $returnData['table'] = $table;
  return $returnData;
}
/**
 * [getLeaderPointsRebotes description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getLeaderPointsRebotes(){
  $name= 'sReboundsTotalAverage.json';
  $idQuery  = 6;
  $sLeaQuery = 'leaders/sReboundsTotalAverage';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/' . $name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file=drupal_get_path('module', 'ligadtv') . '/data/' .$name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderMediaAsistencias2 description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getLeaderMediaAsistencias2($sql,$load=false){
  $name= 'sAssistsAverage.json';
  $sLeaQuery = 'leaders/sAssistsAverage';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
    fwrite($fp, json_encode($data));
    fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [_consult_matchs description]
 * @return [type] [description]
 */
function _consult_matchs($phase){
  $arraydatos = array();
  $query = db_select('node', 'n');
  $query->leftjoin('field_data_field_channel', 'ch', 'n.nid = ch.entity_id');
  $query->leftjoin('field_data_field_team_one', 't1', 'n.nid = t1.entity_id');
  $query->leftjoin('field_data_field_team_tow', 't2', 'n.nid = t2.entity_id');
  $query->leftjoin('field_data_field_date', 'd', 'n.nid = d.entity_id');
  $query->leftjoin('field_data_field_site', 's', 'n.nid = s.entity_id');
  $query->leftJoin('field_data_field_phase', 'p', 'n.nid = s.entity_id');
  $query->fields('n', array('title', 'nid'))
        ->fields('t1', array('field_team_one_target_id'))
        ->fields('t2', array('field_team_tow_target_id'))
        ->fields('ch', array('field_channel_target_id'))
        ->fields('d', array('field_date_value'))
        ->fields('s', array('field_site_tid'))
        ->fields('p', array('field_phase_tid'))
        ->condition('n.type', 'match')
        ->condition('p.field_phase_tid', $phase)
        ->orderBy('n.created', 'DESC');
  $result = $query->execute();
  while ($row = $result->fetchAssoc()) {
    $arraydatos[] = array(
          "title"     => $row["title"],
          "nid"       => $row["nid"],
          "channel"   => $row['field_channel_target_id'],
          "t1"        => $row["field_team_one_target_id"],
          "t2"        => $row["field_team_tow_target_id"],
          "date"      => $row["field_date_value"],
          "site"      => $row["field_site_tid"],
          "phase"     => $row["field_phase_tid"],
        );
  }
  return $arraydatos;
}
/**
 * [getLeaderTlPorcentaje description]
 * @return [type] [description]
 */
function getLeaderTlPorcentaje(){
  $name= 'sFreeThrowsPercentage.json';
  $idQuery  = 8;
  $sLeaQuery = 'leaders/sFreeThrowsPercentage';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/' . $name,'w');
    fwrite($fp, json_encode($data));
    fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeader3Porcentaje description]
 * @return [type] [description]
 */
function getLeader3Porcentaje(){
  $name= 'sFreeThrowsPercentage.json';
  $idQuery  = 10;
  $sLeaQuery = 'leaders/sFreeThrowsPercentage';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
    fwrite($fp, json_encode($data));
    fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeader2Porcentaje description]
 * @return [type]        [description]
 */
function getLeader2Porcentaje(){
  $name= 'sTwoPointersPercentage.json';
  $idQuery  = 9;
  $sLeaQuery = 'leaders/sTwoPointersPercentage';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
    fwrite($fp, json_encode($data));
    fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderPuntos description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getLeaderPuntos(){
  $name= 'sPoints.json';
  $idQuery  = 10;
  $sLeaQuery = 'leaders/sPoints';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
    fwrite($fp, json_encode($data));
    fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderPointsSecondChance description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getLeaderPointsSecondChance(){
  $name= 'sReboundsTotal.json';
  $idQuery  = 12;
  $sLeaQuery = 'leaders/sReboundsTotal';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file=drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderAssists description]
 * @return [type] [description]
 */
function getLeaderAssists(){
  $name= 'sAssists.json';
  $idQuery  = 13;
  $sLeaQuery = 'leaders/sAssists';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderReboundsOffensive description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getLeaderReboundsOffensive(){
  $name= 'sReboundsOffensive.json';
  $idQuery  = 14;
  $sLeaQuery = 'leaders/sReboundsOffensive';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderReboundsDevensive description]
 * @return [type] [description]
 */
function getLeaderReboundsDevensive(){
  $name= 'sReboundsDefensive.json';
  $idQuery  = 15;
  $sLeaQuery = 'leaders/sReboundsDefensive';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
    $json = file_get_contents($query);
    $data = json_decode($json, TRUE);
    $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
      fwrite($fp, json_encode($data));
      fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderTapones description]
 * @return [type] [description]
 */
function getLeaderTapones(){
  $name= 'sBlocks.json';
  $idQuery  = 16;
  $sLeaQuery = 'leaders/sBlocks';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderTlConvert description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getLeaderTlConvert(){
  $name= 'sTrueShootingAttempts.json';
  $idQuery  = 17;
  $sLeaQuery = 'leaders/sTrueShootingAttempts';
  $query= baseSp.'/v1/basketball/competitions/'.liga.'/'.$sLeaQuery.'?format=json&ak='.ak.'&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderCasnasta2 description]
 * @param  [type]  $sql  [description]
 * @param  boolean $load [description]
 * @return [type]        [description]
 */
function getLeaderCasnasta2(){
  $name= 'sTwoPointersMade.json';
  $idQuery  = 18;
  $sLeaQuery = 'leaders/sTwoPointersMade';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;

  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderCasnasta3 description]
 * @return [type] [description]
 */
function getLeaderCasnasta3(){
  $name= 'sThreePointersMade.json';
  $idQuery  = 19;
  $sLeaQuery = 'leaders/sThreePointersMade';
  $query= baseSp.'/v1/basketball/competitions/'.liga.'/'.$sLeaQuery.'?format=json&ak='.ak.'&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderFoulPer description]
 * @return [type] [description]
 */
function getLeaderFoulPer(){
  $name= 'sFoulsPersonal.json';
  $idQuery  = 20;
  $sLeaQuery = 'leaders/sFoulsPersonal';
  $query= baseSp.'/v1/basketball/competitions/'.liga.'/'.$sLeaQuery.'?format=json&ak='.ak.'&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file=drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderPointsSec description]
 * @return [type] [description]
 */
function getLeaderPointsSec(){
  $name= 'sStealsAverage.json';
  $idQuery  = 21;
  $sLeaQuery = 'leaders/sStealsAverage';
  $query= baseSp.'/v1/basketball/competitions/'.liga.'/'.$sLeaQuery.'?format=json&ak='.ak.'&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'. $name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderBallFouls description]
 * @return [type] [description]
 */
function getLeaderBallFouls(){
  $name= 'sTurnovers.json';
  $idQuery  = 22;
  $sLeaQuery = 'leaders/sTurnovers';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderWins description]
 * @return [type] [description]
 */
function getLeaderWins(){
  $name= 'sEfficiency.json';
  $idQuery  = 23;
  $sLeaQuery = 'leaders/sEfficiency';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak=' . ak . '&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/' . $name,'w');
    fwrite($fp, json_encode($data));
    fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [getLeaderBlocksReceived description]
 * @return [type] [description]
 */
function getLeaderBlocksReceived(){
  $name= 'sBlocksAverage.json';
  $idQuery  = 24;
  $sLeaQuery = 'leaders/sBlocksAverage';
  $query= baseSp.'/v1/basketball/competitions/'.liga.'/'.$sLeaQuery.'?format=json&ak='.ak.'&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}

function getLeaderSteals($sql,$load=false){
  $name= 'sSteals.json';
  $idQuery  = 25;
  $sLeaQuery = 'leaders/sSteals';
  $query= baseSp . '/v1/basketball/competitions/' . liga . '/' . $sLeaQuery . '?format=json&ak='.ak.'&limit=500';
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  $fp = fopen(drupal_get_path('module', 'ligadtv') . '/data/'.$name,'w');
  fwrite($fp, json_encode($data));
  fclose($fp);
  $file= drupal_get_path('module', 'ligadtv') . '/data/' . $name;
  return json_decode(file_get_contents($file), true);
}
/**
 * [array_sort description]
 * @param  [type] $array [description]
 * @param  [type] $on    [description]
 * @param  [type] $order [description]
 * @return [type]        [description]
 */
function array_sort($array, $on, $order=SORT_ASC){
    $new_array = array();
    $sortable_array = array();

    if (count($array) > 0) {
        foreach ($array as $k => $v) {
            if (is_array($v)) {
                foreach ($v as $k2 => $v2) {
                    if ($k2 == $on) {
                        $sortable_array[$k] = $v2;
                    }
                }
            } else {
                $sortable_array[$k] = $v;
            }
        }
        switch ($order) {
            case SORT_ASC:
                asort($sortable_array);
            break;
            case SORT_DESC:
                arsort($sortable_array);
            break;
        }
        foreach ($sortable_array as $k => $v) {
            $new_array[$k] = $array[$k];
        }
    }
    return $new_array;
}


//validate if node exists
function team_exist($id){
  $query = db_select('node', 'n');
  $query->condition('type', 'team')
        ->join('field_data_field_external_id', 'ide')
        ->fields('n', array('title'))
        ->condition('ide.field_external_id_value', $id);
  $result = $query->execute();
  while ($row = $result->fetchAssoc()) {
    $arraydatos[] = array(
          "title" => $row["title"],
        );
  }
  if(!empty($arraydatos)){
    return TRUE;
  }else{
    return FALSE;
  }
}

function team_payroll($id){
  $idQuery  = 25;
  $query= baseSp . '/v1/basketball/teams/' . $id . '/persons?format=json&ak=' . ak;
  $json = file_get_contents($query);
  $data = json_decode($json, TRUE);
  return $data;
}

function _get_news($nid){
  $query = db_select('node', 'n');
  $query->join('field_data_field_image', 'img', 'n.nid = img.entity_id');
  $query->join('field_data_field_team', 'tea', 'n.nid = tea.entity_id');
  $query->join('field_data_body', 'b', 'n.nid = b.entity_id');
  $query->fields('n', array('title', 'nid'))
        ->condition('type', 'article')
        ->fields('img', array('field_image_fid'))
        ->fields('b', array('body_value'))
        ->condition('tea.field_team_target_id', $nid);
  $result = $query->execute();
  while ($row = $result->fetchAssoc()) {
    $arraydatos[] = array(
          "title" => $row["title"],
          "body"  => substr($row["body_value"], 0 , 184),
          "img"   =>  theme('image_style', array('style_name' => 'slidorion_home', 'path' => file_load($row["field_image_fid"])->uri, 'getsize' => FALSE, 'attributes' => array())),
        );
  }
  if(!empty($arraydatos)){
    return $arraydatos;
  }else{
    return '';
  }
}
?>
